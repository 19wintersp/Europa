program => statement* EOF


# statements
statement => exprStmt | varDecl

exprStmt => expression ";"
varDecl => "var" IDENTIFIER ("=" expression )? ";"


# expressions
expression => equality

equality => comparison ( ( "==" | "!=" ) comparison )*
comparison => addition ( ( ">" | "<" | ">=" | "<=" ) addition )*

addition => times ( ( "-" | "+" ) times )*
times => unary ( ( "*" | "/" | "%" ) unary )*

unary => ( ( "!" | "-" ) unary ) | primary

primary => NUMBER | STRING | IDENTIFIER | "true" | "false" | "nil" | "(" expression ")"